<?php
// Fake page value for CLI
$page = 'cli_modules_enable';

// Load Composer autoloader
require_once('/data/vendor/autoload.php');

// Load NamelessMC init
define('ROOT_PATH', '/data');
require_once(ROOT_PATH . '/core/init.php');

// Get all modules from the database
$modules = DB::getInstance()->get('modules', ['id', '<>', 0])->results();

$activated_modules = [];
$skipped_modules = [];

foreach ($modules as $module_entry) {
    if ($module_entry->enabled) {
        $skipped_modules[] = $module_entry->name;
        continue;
    }

    $module_name = Output::getClean($module_entry->name);
    $init_file = ROOT_PATH . '/modules/' . $module_name . '/init.php';

    if (!file_exists($init_file)) {
        $skipped_modules[] = $module_name;
        continue;
    }

    $module = null;
    require_once($init_file);

    if ($module instanceof Module) {
        try {
            $module->onEnable();
        } catch (Exception $e) {
            $skipped_modules[] = $module_name;
            continue;
        }

        DB::getInstance()->update('modules', $module_entry->id, [
            'enabled' => true,
        ]);

        $activated_modules[] = $module_name;
    } else {
        $skipped_modules[] = $module_name;
    }
}

// Rebuild module cache
$cache->setCache('modulescache');
$modules_order = [];
$order = Module::determineModuleOrder();
foreach ($order['modules'] as $key => $item) {
    $modules_order[] = [
        'name' => $item,
        'priority' => $key
    ];
}
$cache->store('enabled_modules', $modules_order);

// 결과 출력
echo "✅ 활성화 완료된 모듈:\n";
foreach ($activated_modules as $mod) {
    echo " - $mod\n";
}

if (count($skipped_modules)) {
    echo "\n⚠️ 건너뛴 모듈:\n";
    foreach ($skipped_modules as $mod) {
        echo " - $mod\n";
    }
}

echo "\n🎉 모든 작업이 끝났습니다.\n";
