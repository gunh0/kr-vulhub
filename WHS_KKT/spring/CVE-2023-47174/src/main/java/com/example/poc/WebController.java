package com.example.poc;

import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RestController;

import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;

@RestController
public class WebController {

    private final HttpCookieOAuth2AuthorizationRequestRepository repo =
        new HttpCookieOAuth2AuthorizationRequestRepository();

    @GetMapping("/backend/login/oauth2/code/anything")
    public String exploitEndpoint(HttpServletRequest req) {
        // 모든 쿠키 중 이름이 "oauth2_authorization_request"인 값을 찾아서 역직렬화
        Cookie[] cookies = req.getCookies();
        if (cookies != null) {
            for (Cookie c : cookies) {
                if ("oauth2_authorization_request".equals(c.getName())) {
                    // 여기서 공격자가 심은 페이로드를 역직렬화하게 됩니다.
                    repo.deserialize(c.getValue());
                    return "Deserialized payload!";
                }
            }
        }
        return "No exploit cookie found.";
    }
}
